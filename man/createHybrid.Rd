% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Processes_utils.R
\name{createHybrid}
\alias{createHybrid}
\title{Create a hybrid model Object}
\usage{
createHybrid(
  formula = NULL,
  optimize = TRUE,
  dispersion_parameter = 1,
  NN = NULL,
  dropout = 0.3,
  encoder_layers = 1L,
  hidden = c(50L, 50L),
  sample_regeneration = TRUE,
  transformer = TRUE,
  emb_dim = 20L,
  dim_feedforward = 256L
)
}
\arguments{
\item{formula}{An optional formula specifying the structure of the model. Default is \code{NULL}, which results in the formula \code{~.} being used.}

\item{optimize}{Logical indicating whether the process function should be optimized. Default is \code{FALSE}.}

\item{dispersion_parameter}{init dispersion parameter, if available (currently only supported for regeneration rate that is based on a negative binomial).}

\item{NN}{pass custom NN to model}

\item{dropout}{dropout rate of neural networks}

\item{encoder_layers}{number of encoder layers in the transformer}

\item{hidden}{number of hidden layers in the MLP hybrid model}

\item{sample_regeneration}{sample recruits or not}

\item{transformer}{use transformer architecture or MLP structure}

\item{emb_dim}{embedding dim}

\item{dim_feedforward}{dimension of MLP head in transformer}
}
\value{
A list of class "process" containing the process definition and associated parameters.
}
\description{
This function creates a process object that is used to define a specific ecological process (e.g., growth, mortality, regeneration) within a forest simulation model. The process object can include custom functions, species parameters, environmental initialization, and hidden layers for neural networks.
}
\examples{
growth_process <- createProcess(formula = ~temperature + precipitation, func = growthFunction)

}
