% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FINNInterface.R
\name{continue_fit}
\alias{continue_fit}
\title{Continue Training a \code{finnModel}}
\usage{
continue_fit(object, epochs = 20L, lr = NULL, batchsize = NULL, weights = NULL)
}
\arguments{
\item{object}{An object of class \code{finnModel}, typically obtained from the \code{finn()} function. This object contains the model, initial conditions, and data required for training.}

\item{epochs}{An integer specifying the number of epochs to train the model. Defaults to 20.}

\item{lr}{A numeric value specifying the learning rate for the training process. If \code{NULL}, the learning rate from the \code{object} is used.}

\item{batchsize}{An integer specifying the batch size to use during training. If \code{NULL}, the batch size from the \code{object} is used.}
}
\value{
The function returns an updated object of class \code{finnModel} with the model's training continued for the specified number of epochs.
}
\description{
This function continues the training process for an existing \code{finnModel} object. It fits the model for a specified number of epochs using the provided learning rate and batch size, updating the model's weights accordingly.
}
\details{
The function prepares the response variables and disturbance data, converts them into tensors, and then proceeds with the training process using the \code{fit} method of the \code{finnModel} object. The training is performed on the CPU.
}
\examples{
\dontrun{
  model <- finn(data, ...)
  model <- continue_fit(model, epochs = 50, lr = 0.01, batchsize = 32)
}

}
